class Solution
{
    void solve(int a[], int i, vector<string> &result, string ans, string mapping[], int N)
    {
        //base case
        if(i >= N)
        {
            result.push_back(ans);
            return;

        }

        

        string element = mapping[a[i]];//mapping use krke wo string find kr rhe hai

        for(int j=0; j<element.length(); j++)
        {
            ans.push_back(element[j]);//only add = "a", "b", so on
            solve(a, i+1, result, ans, mapping, N);//in this we add = "ad", "ae", "af", "bd", so on
                
                ans.pop_back();//Backtracking because recusrion ke time hum ek string ke character la rhe the so return k time humne usse remove krne honge jisse hum wapis empty string mei aajaye like we remove "a" so after this we start with "b" understood aese work kr rha hai yeh backtrack...
        }

        
    }

    
    public:
    //Function to find list of all words possible by pressing given numbers.
    vector<string> possibleWords(int a[], int N)
    {
        vector<string> result;
        string ans = "";

        if(N == 0)//when given string is empty 
        return result;

        int i=0;
        string mapping[10] = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        solve(a, i, result, ans, mapping, N);
        
        return result;
    }
};
